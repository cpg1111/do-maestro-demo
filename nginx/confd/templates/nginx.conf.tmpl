user root;
worker_processes auto;
worker_rlimit_nofile 300000;
pid /var/run/nginx.pid;

events {
    worker_connections 200000;
}

http {
    root       /var/www/;
    log_formet upstreamlog '[$time_local] $remote_addr - $remote_user - $server_name to: $upstream_addr: $request upstream_response_time $upstream_response_time msec $msec request_time $request_time';
    access_log /var/log/nginx/access.log upstreamlog;
    error_log  /var/log/nginx/error.log;

    upstream Kube {
        server {{getv "/kubernetes/service/host"}}:{{getv "/kubernetes/service/port"}};
    }

    upstream Maestrod {
        server {{getv "/maestrod/service/host"}}:{{getv "/maestrod/service/port"}};
    }

    server {
        listen                   80;
        listen                   443 ssl;
        server_name              *;
        ssl_certificate          certs/maestrod.io.crt;
        ssl_certificate_key      certs/maestrod.io.key;
        ssl_protocols            TLSv1 TLSv1.1 TLSv1.2;
        ssl_ciphers              'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:AES:CAMELLIA:DES-CBC3-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!aECDH:!EDH-DSS-DES-CBC3-SHA:!EDH-RSA-DES-CBC3-SHA:!KRB5-DES-CBC3-SHA';
        ssl_prefer_server_ciphers on;

        location /k8s/ {
            proxy_pass                 http://Kube/;
            proxy_http_version         1.1;
            proxy_pass_request_headers on;
        }

        location /maestrod/ {
            proxy_pass                 http://Maestrod/;
            proxy_http_version         1.1;
            proxy_pass_request_headers on;
        }

        location /healthz/ {
            return 200 "200 OK";
        }
    }
}
